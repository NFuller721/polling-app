{"version":3,"sources":["Components/Poll.js","App.js","reportWebVitals.js","index.js"],"names":["Poll","state","pollInfo","pollOptions","optionA","optionB","optionC","optionD","optionE","checkHandler","event","setState","target","name","checked","a","body","JSON","stringify","pollId","this","props","match","params","fetch","method","headers","response","json","data","Response","clasName","title","className","optionACount","FormControlLabel","control","Checkbox","onChange","label","optionATitle","optionBCount","optionBTitle","optionCCount","optionCTitle","optionDCount","optionDTitle","optionECount","optionETitle","React","Component","withRouter","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0QAIMA,E,4MACJC,MAAQ,CACNC,SAAU,GACVC,YAAa,CACXC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,SAAS,EACTC,SAAS,I,EAsBbC,aAAe,SAACC,GACd,EAAKC,SAAS,CAACR,YAAY,eAAGO,EAAME,OAAOC,KAAO,CAACH,EAAME,OAAOE,a,8FAnBlE,gCAAAC,EAAA,6DACQC,EAAOC,KAAKC,UAChB,CACEC,OAAQC,KAAKC,MAAMC,MAAMC,OAAOJ,SAHtC,SAMyBK,MAAM,+BAAgC,CAC3DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBV,SAXJ,cAMQW,EANR,gBAaqBA,EAASC,OAb9B,OAaQC,EAbR,OAeET,KAAKT,SAAS,CAACT,SAAU2B,EAAKC,WAfhC,gD,0EAsBA,WACE,OACE,iCACE,qBAAKC,SAAS,YAAd,SACE,6BAAKX,KAAKnB,MAAMC,SAAS8B,UAE3B,sBAAKC,UAAU,OAAf,UACwC,MAApCb,KAAKnB,MAAMC,SAASgC,aAAuB,wBAC3C,cAACC,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUxB,KAAK,UAAUyB,SAAUlB,KAAKX,aAAcK,QAASM,KAAKnB,MAAME,YAAYC,UAC/FmC,MAAOnB,KAAKnB,MAAMC,SAASsC,eAGO,MAApCpB,KAAKnB,MAAMC,SAASuC,aAAuB,wBAC3C,cAACN,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUxB,KAAK,UAAUyB,SAAUlB,KAAKX,aAAcK,QAASM,KAAKnB,MAAME,YAAYE,UAC/FkC,MAAOnB,KAAKnB,MAAMC,SAASwC,eAGO,MAApCtB,KAAKnB,MAAMC,SAASyC,aAAuB,wBAC3C,cAACR,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUxB,KAAK,UAAUyB,SAAUlB,KAAKX,aAAcK,QAASM,KAAKnB,MAAME,YAAYG,UAC/FiC,MAAOnB,KAAKnB,MAAMC,SAAS0C,eAGO,MAApCxB,KAAKnB,MAAMC,SAAS2C,aAAuB,wBAC3C,cAACV,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUxB,KAAK,UAAUyB,SAAUlB,KAAKX,aAAcK,QAASM,KAAKnB,MAAME,YAAYI,UAC/FgC,MAAOnB,KAAKnB,MAAMC,SAAS4C,eAGO,MAApC1B,KAAKnB,MAAMC,SAAS6C,aAAuB,wBAC3C,cAACZ,EAAA,EAAD,CACEC,QAAS,cAACC,EAAA,EAAD,CAAUxB,KAAK,UAAUyB,SAAUlB,KAAKX,aAAcK,QAASM,KAAKnB,MAAME,YAAYK,UAC/F+B,MAAOnB,KAAKnB,MAAMC,SAAS8C,yB,GApEtBC,IAAMC,WA6EVC,cAAWnD,GC7DXoD,MAjBf,WACE,OACE,cAAC,IAAD,UACE,qBAAKnB,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOoB,OAAK,EAACC,KAAK,IAAlB,SACE,8CAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAAlB,SACE,cAAC,EAAD,cCAGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"js/main.9648a805.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { FormControlLabel, Checkbox } from '@material-ui/core'\n\nclass Poll extends React.Component {\n  state = {\n    pollInfo: {},\n    pollOptions: {\n      optionA: false,\n      optionB: false,\n      optionC: false,\n      optionD: false,\n      optionE: false\n    }\n  }\n\n  async componentDidMount() {\n    const body = JSON.stringify(\n      {\n        pollId: this.props.match.params.pollId\n      }\n    )\n    const response = await fetch(\"/Api/467586970086574653/read\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body\n    })\n    const data = await response.json()\n\n    this.setState({pollInfo: data.Response})\n  }\n\n  checkHandler = (event) => {\n    this.setState({pollOptions: {[event.target.name]: [event.target.checked]}})\n  }\n\n  render() {\n    return (\n      <form>\n        <div clasName=\"PollTitle\">\n          <h1>{this.state.pollInfo.title}</h1>\n        </div>\n        <div className=\"Poll\">\n          { this.state.pollInfo.optionACount == null ? <div></div> : (\n            <FormControlLabel\n              control={<Checkbox name=\"optionA\" onChange={this.checkHandler} checked={this.state.pollOptions.optionA} />}\n              label={this.state.pollInfo.optionATitle}\n              />\n          )}\n          { this.state.pollInfo.optionBCount == null ? <div></div> : (\n            <FormControlLabel\n              control={<Checkbox name=\"optionB\" onChange={this.checkHandler} checked={this.state.pollOptions.optionB} />}\n              label={this.state.pollInfo.optionBTitle}\n              />\n          )}\n          { this.state.pollInfo.optionCCount == null ? <div></div> : (\n            <FormControlLabel\n              control={<Checkbox name=\"optionC\" onChange={this.checkHandler} checked={this.state.pollOptions.optionC} />}\n              label={this.state.pollInfo.optionCTitle}\n              />\n          )}\n          { this.state.pollInfo.optionDCount == null ? <div></div> : (\n            <FormControlLabel\n              control={<Checkbox name=\"optionD\" onChange={this.checkHandler} checked={this.state.pollOptions.optionD} />}\n              label={this.state.pollInfo.optionDTitle}\n              />\n          )}\n          { this.state.pollInfo.optionECount == null ? <div></div> : (\n            <FormControlLabel\n              control={<Checkbox name=\"optionE\" onChange={this.checkHandler} checked={this.state.pollOptions.optionE} />}\n              label={this.state.pollInfo.optionETitle}\n              />\n          )}\n        </div>\n      </form>\n    )\n  }\n}\n\nexport default withRouter(Poll)\n","import { BrowserRouter as Router, Route, Switch, useParams } from 'react-router-dom'\nimport Poll from './Components/Poll'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <p>Hello There</p>\n          </Route>\n          <Route exact path=\"/poll/:pollId\">\n            <Poll />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}