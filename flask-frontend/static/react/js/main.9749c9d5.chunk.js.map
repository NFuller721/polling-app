{"version":3,"sources":["Components/Poll.js","App.js","reportWebVitals.js","index.js"],"names":["Poll","state","pollInfo","a","body","JSON","stringify","pollId","this","props","match","params","fetch","method","headers","response","json","data","setState","Response","console","log","optionACount","optionBCount","optionCCount","optionDCount","optionECount","Checkbox","checked","React","Component","withRouter","App","className","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0PAIMA,E,4MAEJC,MAAQ,CACNC,SAAU,I,8FAGZ,gCAAAC,EAAA,6DACQC,EAAOC,KAAKC,UAChB,CACEC,OAAQC,KAAKC,MAAMC,MAAMC,OAAOJ,SAHtC,SAMyBK,MAAM,+BAAgC,CAC3DC,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBV,SAXJ,cAMQW,EANR,gBAaqBA,EAASC,OAb9B,OAaQC,EAbR,OAeET,KAAKU,SAAS,CAAChB,SAAUe,EAAKE,WAE9BC,QAAQC,IAAIb,KAAKP,MAAMC,SAASoB,cAAgB,GAChDF,QAAQC,IAAIb,KAAKP,MAAMC,SAASqB,cAAgB,GAChDH,QAAQC,IAAIb,KAAKP,MAAMC,SAASsB,cAAgB,GAChDJ,QAAQC,IAAIb,KAAKP,MAAMC,SAASuB,cAAgB,GAChDL,QAAQC,IAAIb,KAAKP,MAAMC,SAASwB,cAAgB,GArBlD,iD,0EAuBA,WACE,OACE,iCACMlB,KAAKP,MAAMC,SAASoB,cAAgB,EAAmB,cAACK,EAAA,EAAD,CAAUC,SAAS,IAAjC,wBACzCpB,KAAKP,MAAMC,SAASqB,cAAgB,EAAmB,cAACI,EAAA,EAAD,CAAUC,SAAS,IAAjC,wBACzCpB,KAAKP,MAAMC,SAASsB,cAAgB,EAAmB,cAACG,EAAA,EAAD,CAAUC,SAAS,IAAjC,wBACzCpB,KAAKP,MAAMC,SAASuB,cAAgB,EAAmB,cAACE,EAAA,EAAD,CAAUC,SAAS,IAAjC,wBACzCpB,KAAKP,MAAMC,SAASwB,cAAgB,EAAmB,cAACC,EAAA,EAAD,CAAUC,SAAS,IAAjC,+B,GApClCC,IAAMC,WA0CVC,cAAW/B,GC1BXgC,MAjBf,WACE,OACE,cAAC,IAAD,UACE,qBAAKC,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAlB,SACE,8CAEF,cAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gBAAlB,SACE,cAAC,EAAD,cCAGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"js/main.9749c9d5.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { Checkbox } from '@material-ui/core'\n\nclass Poll extends React.Component {\n\n  state = {\n    pollInfo: {}\n  }\n\n  async componentDidMount() {\n    const body = JSON.stringify(\n      {\n        pollId: this.props.match.params.pollId\n      }\n    )\n    const response = await fetch(\"/Api/467586970086574653/read\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body\n    })\n    const data = await response.json()\n\n    this.setState({pollInfo: data.Response})\n\n    console.log(this.state.pollInfo.optionACount >= 0)\n    console.log(this.state.pollInfo.optionBCount >= 0)\n    console.log(this.state.pollInfo.optionCCount >= 0)\n    console.log(this.state.pollInfo.optionDCount >= 0)\n    console.log(this.state.pollInfo.optionECount >= 0)\n  }\n  render() {\n    return (\n      <form>\n        { !(this.state.pollInfo.optionACount >= 0) ? <div></div> : <Checkbox checked={false} />}\n        { !(this.state.pollInfo.optionBCount >= 0) ? <div></div> : <Checkbox checked={false} />}\n        { !(this.state.pollInfo.optionCCount >= 0) ? <div></div> : <Checkbox checked={false} />}\n        { !(this.state.pollInfo.optionDCount >= 0) ? <div></div> : <Checkbox checked={false} />}\n        { !(this.state.pollInfo.optionECount >= 0) ? <div></div> : <Checkbox checked={false} />}\n      </form>\n    )\n  }\n}\n\nexport default withRouter(Poll)\n","import { BrowserRouter as Router, Route, Switch, useParams } from 'react-router-dom'\nimport Poll from './Components/Poll'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <p>Hello There</p>\n          </Route>\n          <Route exact path=\"/poll/:pollId\">\n            <Poll />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}