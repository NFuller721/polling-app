{"version":3,"sources":["Components/ThemeProviderComponent.js","Components/Poll.js","App.js","reportWebVitals.js","index.js"],"names":["ThemeProviderComponent","children","prefersDarkMode","useMediaQuery","theme","createMuiTheme","palette","type","ThemeProvider","Poll","state","pollInfo","pollOptions","optionA","optionB","optionC","optionD","optionE","useStyles","makeStyles","Card","height","width","classes","a","body","JSON","stringify","pollId","this","props","match","params","fetch","method","headers","response","json","data","setState","Response","className","CardContent","clasName","Typography","title","onSubmit","submitHandler","optionACount","FormControlLabel","control","Checkbox","name","onChange","checkHandler","checked","label","optionATitle","optionBCount","optionBTitle","optionCCount","optionCTitle","optionDCount","optionDTitle","optionECount","optionETitle","Button","variant","React","Component","withRouter","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"js/main.b7c6005e.chunk.js","sourcesContent":["import { createMuiTheme, ThemeProvider } from '@material-ui/core/styles'\nimport { useMediaQuery } from '@material-ui/core'\nconst ThemeProviderComponent = ({ children }) => {\n  const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n  const theme = createMuiTheme({\n    palette: {\n      type: prefersDarkMode ? 'dark' : 'light',\n    },\n  })\n\n  return (\n    <ThemeProvider theme={theme}>\n      {children}\n    </ThemeProvider>\n  )\n}\n\nexport default ThemeProviderComponent\n","import React, { useEffect, useState } from 'react'\nimport { withRouter } from 'react-router-dom'\nimport { makeStyles } from '@material-ui/core/styles'\nimport {\n  FormControlLabel,\n  Checkbox, Button,\n  Card, CardContent,\n  Typography,\n  useMediaQuery\n} from '@material-ui/core'\n\nimport ThemeProviderComponent from './ThemeProviderComponent'\n\nclass Poll extends React.Component {\n  constructor() {\n    this.state = {\n      pollInfo: {},\n      pollOptions: {\n        optionA: false,\n        optionB: false,\n        optionC: false,\n        optionD: false,\n        optionE: false\n      }\n    }\n    this.useStyles = makeStyles({\n      Card: {\n        height: \"450px\",\n        width: \"375px\"\n      }\n    })\n    this.classes = this.useStyles()\n  }\n\n  async componentDidMount() {\n    const body = JSON.stringify(\n      {\n        pollId: this.props.match.params.pollId\n      }\n    )\n    const response = await fetch(\"/Api/467586970086574653/read\", {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body\n    })\n    const data = await response.json()\n\n    this.setState({pollInfo: data.Response})\n  }\n\n  checkHandler = (event) => {\n    this.setState({pollOptions: {[event.target.name]: [event.target.checked]}})\n  }\n\n  submitHandler = (event) => {\n    event.preventDefault()\n  }\n\n  render() {\n    return (\n      <ThemeProviderComponent>\n        <Card className={this.classes.Card}>\n          <CardContent>\n            <div clasName=\"PollTitle\">\n              <Typography>{this.state.pollInfo.title}</Typography>\n            </div>\n            <form onSubmit={this.submitHandler} className=\"Poll\">\n              { this.state.pollInfo.optionACount == null ? <div></div> : (\n                <FormControlLabel\n                  control={<Checkbox name=\"optionA\" onChange={this.checkHandler} checked={this.state.pollOptions.optionA} />}\n                  label={this.state.pollInfo.optionATitle}\n                  />\n              )}\n              { this.state.pollInfo.optionBCount == null ? <div></div> : (\n                <FormControlLabel\n                  control={<Checkbox name=\"optionB\" onChange={this.checkHandler} checked={this.state.pollOptions.optionB} />}\n                  label={this.state.pollInfo.optionBTitle}\n                  />\n              )}\n              { this.state.pollInfo.optionCCount == null ? <div></div> : (\n                <FormControlLabel\n                  control={<Checkbox name=\"optionC\" onChange={this.checkHandler} checked={this.state.pollOptions.optionC} />}\n                  label={this.state.pollInfo.optionCTitle}\n                  />\n              )}\n              { this.state.pollInfo.optionDCount == null ? <div></div> : (\n                <FormControlLabel\n                  control={<Checkbox name=\"optionD\" onChange={this.checkHandler} checked={this.state.pollOptions.optionD} />}\n                  label={this.state.pollInfo.optionDTitle}\n                  />\n              )}\n              { this.state.pollInfo.optionECount == null ? <div></div> : (\n                <FormControlLabel\n                  control={<Checkbox name=\"optionE\" onChange={this.checkHandler} checked={this.state.pollOptions.optionE} />}\n                  label={this.state.pollInfo.optionETitle}\n                  />\n              )}\n              <Button variant=\"contained\" type=\"submit\">Submit</Button>\n            </form>\n          </CardContent>\n        </Card>\n      </ThemeProviderComponent>\n    )\n  }\n}\n\nexport default withRouter(Poll)\n","import { BrowserRouter as Router, Route, Switch, useParams } from 'react-router-dom'\nimport Poll from './Components/Poll'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <p>Hello There</p>\n          </Route>\n          <Route exact path=\"/poll/:pollId\">\n            <Poll />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App'\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}